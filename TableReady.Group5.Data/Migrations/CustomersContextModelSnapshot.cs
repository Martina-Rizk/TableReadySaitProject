// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TableReady.Group5.Data;

namespace TableReady.Group5.Data.Migrations
{
    [DbContext(typeof(CustomersContext))]
    partial class CustomersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TableReady.Group5.Domain.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Vancouver",
                            Email = "John@gmail.com",
                            FirstName = "John",
                            LastName = "Robert",
                            Password = "password",
                            State = "BC",
                            ZipCode = "14t6f"
                        },
                        new
                        {
                            ID = 2,
                            City = "Calgary",
                            Email = "Rose@gmail.com",
                            FirstName = "Rose",
                            LastName = "Wilson",
                            Password = "password",
                            State = "AB",
                            ZipCode = "5r4c1d"
                        },
                        new
                        {
                            ID = 3,
                            City = "Banff",
                            Email = "Sally@yahoo.com",
                            FirstName = "Sally",
                            LastName = "Smith",
                            Password = "password",
                            State = "AB",
                            ZipCode = "1e2r3d3"
                        },
                        new
                        {
                            ID = 4,
                            City = "Edmonton",
                            Email = "Andrew@yahoo.com",
                            FirstName = "Andrew",
                            LastName = "Jacob",
                            Password = "password",
                            State = "AB",
                            ZipCode = "t3b5d4"
                        });
                });

            modelBuilder.Entity("TableReady.Group5.Domain.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CustomerID = 1,
                            ReservationDate = new DateTime(2020, 5, 15, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            ReservationStatus = "Accept",
                            RestaurantID = 3
                        },
                        new
                        {
                            ID = 2,
                            CustomerID = 2,
                            ReservationDate = new DateTime(2020, 8, 8, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            ReservationStatus = "Accept",
                            RestaurantID = 4
                        });
                });

            modelBuilder.Entity("TableReady.Group5.Domain.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RestaurantDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RestaurantImage")
                        .HasColumnType("Image");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            RestaurantDescription = "Buckets, Feasts, Box Meals and More. Get Original Recipe Chicken Delivered Now!",
                            RestaurantName = "KFC"
                        },
                        new
                        {
                            ID = 2,
                            RestaurantDescription = "Looking for some hometown goodness? Take a look at whats going on at your local A&W, stop in and lets us know how we are doing!",
                            RestaurantName = "A&W"
                        },
                        new
                        {
                            ID = 3,
                            RestaurantDescription = "Treat yourself to some expertly made steak in either a classic or non-traditional steak house setting.",
                            RestaurantName = "SteakHouse"
                        },
                        new
                        {
                            ID = 4,
                            RestaurantDescription = "Fast-food chain serving Mexican-inspired fare such as tacos, quesadillas & nachos.",
                            RestaurantName = "Taco Bell"
                        });
                });

            modelBuilder.Entity("TableReady.Group5.Domain.Reward", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckedValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FreeProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Reward");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CustomerID = 2,
                            Discount = 5m,
                            FreeProduct = "drink",
                            IsChecked = false,
                            Points = 20,
                            RestaurantID = 1
                        },
                        new
                        {
                            ID = 2,
                            CustomerID = 3,
                            Discount = 2m,
                            FreeProduct = "",
                            IsChecked = false,
                            Points = 50,
                            RestaurantID = 4
                        },
                        new
                        {
                            ID = 3,
                            CustomerID = 4,
                            Discount = 1m,
                            FreeProduct = "desert",
                            IsChecked = false,
                            Points = 10,
                            RestaurantID = 2
                        },
                        new
                        {
                            ID = 4,
                            CustomerID = 1,
                            Discount = 0m,
                            FreeProduct = "drink",
                            IsChecked = false,
                            Points = 25,
                            RestaurantID = 1
                        });
                });

            modelBuilder.Entity("TableReady.Group5.Domain.WaitList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("WaitList");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CustomerID = 3,
                            Position = 2,
                            RestaurantID = 1
                        },
                        new
                        {
                            ID = 2,
                            CustomerID = 1,
                            Position = 5,
                            RestaurantID = 2
                        },
                        new
                        {
                            ID = 3,
                            CustomerID = 2,
                            Position = 4,
                            RestaurantID = 3
                        });
                });

            modelBuilder.Entity("TableReady.Group5.Domain.Reservation", b =>
                {
                    b.HasOne("TableReady.Group5.Domain.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TableReady.Group5.Domain.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TableReady.Group5.Domain.Reward", b =>
                {
                    b.HasOne("TableReady.Group5.Domain.Customer", "Customer")
                        .WithMany("Rewards")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TableReady.Group5.Domain.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID");
                });

            modelBuilder.Entity("TableReady.Group5.Domain.WaitList", b =>
                {
                    b.HasOne("TableReady.Group5.Domain.Customer", "Customer")
                        .WithMany("WaitLists")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TableReady.Group5.Domain.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
